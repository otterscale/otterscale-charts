# =============================================================================
# OtterScale Helm Chart Configuration
# =============================================================================
# This file contains all configurable parameters for the OtterScale deployment.
# Modify these values according to your environment and requirements.

# -----------------------------------------------------------------------------
# Global Settings
# -----------------------------------------------------------------------------
global:
  # Image pull policy for all containers
  # Options: Always, IfNotPresent, Never
  imagePullPolicy: IfNotPresent
  
# -----------------------------------------------------------------------------
# Application Version
# -----------------------------------------------------------------------------
# Version tag for OtterScale service and web images
# This corresponds to APP_VERSION in the environment configuration
appVersion: latest

# -----------------------------------------------------------------------------
# Istio Configuration
# -----------------------------------------------------------------------------
istio:
  # Enable or disable Istio integration
  # When enabled, will install Istio base + istiod via Helm dependencies
  enabled: true
  
  # Automatic sidecar injection
  # If true, enables automatic sidecar injection for the namespace
  sidecarInjection:
    enabled: true

  # Gateway configuration for external traffic
  gateway:
    enabled: false
    name: otterscale-gateway
    servers:
      # HTTP server
      - port:
          number: 80
          name: http
          protocol: HTTP
        # List of hosts that the gateway should serve
        hosts: []
        # Optional: redirect HTTP to HTTPS
        # tls:
        #   httpsRedirect: true

      # HTTPS server (uncomment and configure for TLS)
      # - port:
      #     number: 443
      #     name: https
      #     protocol: HTTPS
      #   hosts:
      #     - "otterscale.example.com"
      #   tls:
      #     mode: SIMPLE
      #     credentialName: otterscale-tls-cert
  
  # Destination rules for traffic policies (optional)
  destinationRule:
    enabled: false
    # Connection pool settings
    connectionPool:
      tcp:
        maxConnections: 100
      http:
        http1MaxPendingRequests: 100
        http2MaxRequests: 100
    # Outlier detection for circuit breaking
    outlierDetection:
      consecutiveErrors: 5
      interval: 30s
      baseEjectionTime: 30s
      maxEjectionPercent: 50

# -----------------------------------------------------------------------------
# OPA Gatekeeper Configuration
# -----------------------------------------------------------------------------
# Open Policy Agent Gatekeeper provides policy and governance for Kubernetes
gatekeeper:
  # Enable or disable OPA Gatekeeper deployment
  enabled: true
  
  # Number of controller manager replicas for high availability
  replicas: 1
  
  # Audit configuration
  audit:
    # Audit interval in seconds (how often violations are checked)
    interval: 60
    # Maximum number of constraint violations to report
    constraintViolationsLimit: 20
    # Disable audit functionality (not recommended)
    disabled: false
    # Run audit from cache for better performance
    fromCache: false
    # Chunk size for processing audit results
    chunkSize: 500
  
  # Webhook configuration for admission control
  validatingWebhook:
    # Webhook timeout in seconds
    timeoutSeconds: 3
    # Failure policy when webhook is unavailable (Fail or Ignore)
    failurePolicy: Fail
    # Webhook name
    name: gatekeeper-validating-webhook-configuration
    # Enable delete operations validation
    enableDeleteOperations: false
    # Enable connect operations validation  
    enableConnectOperations: false
  
  # Mutating webhook configuration
  mutatingWebhook:
    # Webhook timeout in seconds
    timeoutSeconds: 1
    # Failure policy when webhook is unavailable (Fail or Ignore)
    failurePolicy: Fail
    # Reinvocation policy (Never or IfNeeded)
    reinvocationPolicy: Never
    # Webhook name
    name: gatekeeper-mutating-webhook-configuration
    # Disable mutation functionality
    disabled: false
  
  image:
    repository: openpolicyagent/gatekeeper
    crdRepository: openpolicyagent/gatekeeper-crds
    tag: v3.20.1
    pullPolicy: IfNotPresent
    pullSecrets: []
  
  # Controller manager configuration
  controllerManager:
    # Service account name
    serviceAccount:
      name: gatekeeper-admin
    # Network configuration
    hostNetwork: false
    dnsPolicy: ClusterFirst
    # Ports configuration
    port: 8443
    metricsPort: 8888
    healthPort: 9090
    # Priority class for scheduling
    priorityClassName: system-cluster-critical
    # TLS configuration
    tlsMinVersion: 1.3
    disableCertRotation: false
    # Exempt namespaces from policy enforcement
    exemptNamespaces:
      - kube-system
      - kube-public  
      - istio-system
    exemptNamespacePrefixes: []
    # Deployment strategy
    strategyType: RollingUpdate
    resources:
      limits:
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 512Mi
    # Node selector for pod placement
    nodeSelector:
      kubernetes.io/os: linux
    # Security context
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsGroup: 999
      runAsNonRoot: true
      runAsUser: 1000
    # Pod security context
    podSecurityContext:
      fsGroup: 999
      supplementalGroups:
        - 999
    # Anti-affinity for high availability
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: gatekeeper.sh/operation
                    operator: In
                    values:
                      - webhook
              topologyKey: kubernetes.io/hostname
            weight: 100
  
  # Logging configuration
  logging:
    # Log level (DEBUG, INFO, WARNING, ERROR)
    level: INFO
    # Log policy denials
    logDenies: false
    # Log mutation events
    logMutations: false
  
  # Metrics and monitoring
  metrics:
    backends: ["prometheus"]
  
  # External data provider configuration
  externalData:
    # Enable external data provider support
    enabled: true
    # Response cache TTL
    providerResponseCacheTTL: 3m
  
  # Kubernetes native validation
  k8sNativeValidation:
    enabled: true
  
  # Generator resource expansion
  generatorResourceExpansion:
    enabled: true
  
  # Resource quota for critical pods
  resourceQuota: true
  
  # Pod disruption budget
  pdb:
    controllerManager:
      minAvailable: 1
  
  # Network policy (optional)
  networkPolicy:
    enabled: false
  
  # RBAC configuration
  rbac:
    create: true
  
  # Service account configuration
  serviceAccount:
    gatekeeperAdmin:
      create: true
  
  # Post-installation configuration
  postInstall:
    labelNamespace:
      enabled: true
      serviceAccount:
        name: gatekeeper-update-namespace-label
        create: true
      # Pod security standards for labeled namespaces
      podSecurity:
        - "pod-security.kubernetes.io/audit=restricted"
        - "pod-security.kubernetes.io/audit-version=latest"
        - "pod-security.kubernetes.io/warn=restricted"
        - "pod-security.kubernetes.io/warn-version=latest"
        - "pod-security.kubernetes.io/enforce=restricted"
        - "pod-security.kubernetes.io/enforce-version=v1.24"
    # Webhook probe configuration
    probeWebhook:
      enabled: true
      image:
        repository: curlimages/curl
        tag: 8.12.0
        pullPolicy: IfNotPresent
      waitTimeout: 60
      httpTimeout: 2
  
  # CRD upgrade configuration
  upgradeCRDs:
    enabled: true
    serviceAccount:
      create: true
      name: gatekeeper-admin-upgrade-crds
  
  # Pod security policy (deprecated in newer Kubernetes versions)
  psp:
    enabled: false
  
  # Additional disabled built-ins for security
  disabledBuiltins: ["{http.send}"]


# -----------------------------------------------------------------------------
# Kong Configuration
# -----------------------------------------------------------------------------
kong:
  enabled: true
  ingressController:
    enabled: true
  admin:
    enabled: false
  image:
    repository: docker.io/kong/kong
    tag: "3.9"
  proxy:
    enabled: false
  
