apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "otterscale.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "otterscale.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  replicas: {{ .Values.otterscale.replicas }}
  selector:
    matchLabels:
      {{- include "otterscale.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: backend
  template:
    metadata:
      labels:
        {{- include "otterscale.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: backend
        {{- if and .Values.istio.enabled .Values.istio.sidecarInjection.enabled }}
        sidecar.istio.io/inject: "true"
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/otterscale-configmap.yaml") . | sha256sum }}
        {{- with .Values.otterscale.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      # Init container to wait for PostgreSQL to be ready
      initContainers:
        - name: wait-for-postgres
          image: postgres:15
          command:
            - sh
            - -c
            - |
              until pg_isready -h {{ include "otterscale.fullname" . }}-postgres -p 5432 -U {{ .Values.postgres.user }}; do
                echo "Waiting for PostgreSQL to be ready..."
                sleep 2
              done
              echo "PostgreSQL is ready!"
          env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "otterscale.fullname" . }}-postgres
                  key: postgres-password
      containers:
        - name: otterscale
          image: "{{ .Values.otterscale.image.repository }}:{{ .Values.otterscale.image.tag | default .Values.appVersion }}"
          imagePullPolicy: {{ .Values.otterscale.image.pullPolicy }}
          command: ["/app/otterscale", "serve"]
          ports:
            - name: http
              containerPort: 8299
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /etc/app/otterscale.yaml
              subPath: otterscale.yaml
              readOnly: true
          resources:
            {{- toYaml .Values.otterscale.resources | nindent 12 }}
      volumes:
        - name: config
          configMap:
            name: {{ include "otterscale.fullname" . }}-config
      {{- with .Values.otterscale.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.otterscale.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.otterscale.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
